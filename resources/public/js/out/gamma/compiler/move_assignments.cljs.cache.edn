;; Analyzed by ClojureScript 0.0-3208
{:use-macros nil, :excludes #{}, :name gamma.compiler.move-assignments, :imports nil, :requires {gamma.compiler.common gamma.compiler.common, gamma.ast gamma.ast}, :uses {id? gamma.ast, gen-term-id gamma.ast, assoc-in-location gamma.compiler.common, map-path gamma.compiler.common, get-element gamma.compiler.common, assoc-elements gamma.compiler.common}, :defs {move-assignments {:protocol-inline nil, :meta {:arglists (quote ([])), :end-column 23, :end-line 20, :column 7, :line 20, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/move_assignments.cljs"}, :name gamma.compiler.move-assignments/move-assignments, :variadic false, :file "src/gamma/compiler/move_assignments.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, helper {:protocol-inline nil, :meta {:arglists (quote ([db location])), :end-column 13, :end-line 9, :column 7, :line 9, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/move_assignments.cljs"}, :name gamma.compiler.move-assignments/helper, :variadic false, :file "src/gamma/compiler/move_assignments.cljs", :end-column 13, :method-params ([db location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db location])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:block :head :assignments :body :id], :seen #{:assignments :block :head :id :body}}, :doc nil}