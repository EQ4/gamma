;; Analyzed by ClojureScript 0.0-3208
{:use-macros nil, :excludes #{}, :name gamma.compiler.lift-assignments, :imports nil, :requires {gamma.compiler.common gamma.compiler.common, gamma.ast gamma.ast}, :uses {id? gamma.ast, gen-term-id gamma.ast, map-path gamma.compiler.common, get-element gamma.compiler.common}, :defs {lift-assignments {:protocol-inline nil, :meta {:arglists (quote ([target-block-id])), :end-column 23, :end-line 35, :column 7, :line 35, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/lift_assignments.cljs"}, :name gamma.compiler.lift-assignments/lift-assignments, :variadic false, :file "src/gamma/compiler/lift_assignments.cljs", :end-column 23, :method-params ([target-block-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([target-block-id])), :test true}, get-target {:protocol-inline nil, :meta {:arglists (quote ([db location target-block-id])), :end-column 17, :end-line 26, :column 7, :line 26, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/lift_assignments.cljs"}, :name gamma.compiler.lift-assignments/get-target, :variadic false, :file "src/gamma/compiler/lift_assignments.cljs", :end-column 17, :method-params ([db location target-block-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db location target-block-id])), :test true}, lift-assignments-sub {:protocol-inline nil, :meta {:arglists (quote ([db location target-block-id])), :end-column 27, :end-line 21, :column 7, :line 21, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/lift_assignments.cljs"}, :name gamma.compiler.lift-assignments/lift-assignments-sub, :variadic false, :file "src/gamma/compiler/lift_assignments.cljs", :end-column 27, :method-params ([db location target-block-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([db location target-block-id])), :test true}, liftable? {:protocol-inline nil, :meta {:arglists (quote ([db location])), :end-column 16, :end-line 7, :column 7, :line 7, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/lift_assignments.cljs"}, :name gamma.compiler.lift-assignments/liftable?, :variadic false, :file "src/gamma/compiler/lift_assignments.cljs", :end-column 16, :method-params ([db location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db location])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:shared :path :parent :if :head :env :id :assignments :block :body], :seen #{:path :assignments :block :parent :if :env :head :id :shared :body}}, :doc nil}