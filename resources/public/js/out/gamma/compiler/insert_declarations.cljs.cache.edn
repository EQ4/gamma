;; Analyzed by ClojureScript 0.0-3208
{:use-macros nil, :excludes #{}, :name gamma.compiler.insert-declarations, :imports nil, :requires {gamma.compiler.core gamma.compiler.core, gamma.compiler.common gamma.compiler.common, gamma.ast gamma.ast}, :uses {id? gamma.ast, transform gamma.compiler.core, gen-term-id gamma.ast, assoc-in-location gamma.compiler.common, map-path gamma.compiler.common, get-element gamma.compiler.common, assoc-elements gamma.compiler.common}, :defs {variables {:protocol-inline nil, :meta {:arglists (quote ([db])), :end-column 16, :end-line 16, :column 7, :line 16, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/insert_declarations.cljs"}, :name gamma.compiler.insert-declarations/variables, :variadic false, :file "src/gamma/compiler/insert_declarations.cljs", :end-column 16, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db])), :test true}, walk {:protocol-inline nil, :meta {:arglists (quote ([db pre])), :end-column 11, :end-line 8, :column 7, :line 8, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/insert_declarations.cljs"}, :name gamma.compiler.insert-declarations/walk, :variadic false, :file "src/gamma/compiler/insert_declarations.cljs", :end-column 11, :method-params ([db pre]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db pre])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:body :literal :head :variable :tag :value :type], :seen #{:variable :value :type :head :literal :tag :body}}, :doc nil}