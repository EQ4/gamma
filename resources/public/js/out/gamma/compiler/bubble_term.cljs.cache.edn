;; Analyzed by ClojureScript 0.0-3208
{:use-macros nil, :excludes #{}, :name gamma.compiler.bubble-term, :imports nil, :requires {fipp.printer fipp.printer, gamma.ast gamma.ast}, :uses {id? gamma.ast}, :defs {bubble-terms {:protocol-inline nil, :meta {:arglists (quote ([db])), :end-column 19, :end-line 53, :column 7, :line 53, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/bubble_term.cljs"}, :name gamma.compiler.bubble-term/bubble-terms, :variadic false, :file "src/gamma/compiler/bubble_term.cljs", :end-column 19, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db])), :test true}, bubble-term {:protocol-inline nil, :meta {:arglists (quote ([db queue])), :end-column 18, :end-line 18, :column 7, :line 18, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/bubble_term.cljs"}, :name gamma.compiler.bubble-term/bubble-term, :variadic false, :file "src/gamma/compiler/bubble_term.cljs", :end-column 18, :method-params ([db queue]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db queue])), :test true}, parent-bubbles {:protocol-inline nil, :meta {:arglists (quote ([db bubble])), :end-column 21, :end-line 7, :column 7, :line 7, :file "/Users/kovasb/repo/gamma/src/gamma/compiler/bubble_term.cljs"}, :name gamma.compiler.bubble-term/parent-bubbles, :variadic false, :file "src/gamma/compiler/bubble_term.cljs", :end-column 21, :method-params ([db bubble]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db bubble])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:if :head :current :conditional :parents :root :shared :start :unconditional :id], :seen #{:if :start :head :root :id :current :parents :shared :unconditional :conditional}}, :doc nil}