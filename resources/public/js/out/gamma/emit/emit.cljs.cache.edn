;; Analyzed by ClojureScript 0.0-3208
{:use-macros nil, :excludes #{}, :name gamma.emit.emit, :imports nil, :requires {gamma.ast gamma.ast}, :uses {body gamma.ast, term gamma.ast, head gamma.ast}, :defs {emit {:meta {:end-column 15, :end-line 29, :column 11, :line 29, :file "/Users/kovasb/repo/gamma/src/gamma/emit/emit.cljs"}, :file "src/gamma/emit/emit.cljs", :line 29, :column 1, :end-line 29, :end-column 15, :test true, :name gamma.emit.emit/emit}, emit-dispatch {:protocol-inline nil, :meta {:arglists (quote ([db x])), :end-column 20, :end-line 15, :column 7, :line 15, :file "/Users/kovasb/repo/gamma/src/gamma/emit/emit.cljs"}, :name gamma.emit.emit/emit-dispatch, :variadic false, :file "src/gamma/emit/emit.cljs", :end-column 20, :method-params ([db x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db x])), :test true}, primitive? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 17, :end-line 12, :column 7, :line 12, :file "/Users/kovasb/repo/gamma/src/gamma/emit/emit.cljs"}, :name gamma.emit.emit/primitive?, :variadic false, :file "src/gamma/emit/emit.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, operator-class {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 21, :end-line 8, :column 7, :line 8, :file "/Users/kovasb/repo/gamma/src/gamma/emit/emit.cljs"}, :name gamma.emit.emit/operator-class, :variadic false, :file "src/gamma/emit/emit.cljs", :end-column 21, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, function? {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 16, :end-line 5, :column 7, :line 5, :file "/Users/kovasb/repo/gamma/src/gamma/emit/emit.cljs"}, :name gamma.emit.emit/function?, :variadic false, :file "src/gamma/emit/emit.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:class :primitive :int :float :bool :primitive-type :function :tag :hierarchy :default :literal :value :nil], :seen #{:int :default :float :value :function :primitive :class :nil :literal :tag :bool :hierarchy :primitive-type}}, :doc nil}