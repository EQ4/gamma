;; Analyzed by ClojureScript 0.0-3208
{:use-macros nil, :excludes #{}, :name gamma.emit.tag, :imports nil, :requires {gamma.ast gamma.ast, gamma.emit.emit gamma.emit.emit}, :uses {body gamma.ast, term gamma.ast, head gamma.ast, emit gamma.emit.emit}, :defs {qualifier-order {:meta {:end-column 21, :end-line 39, :column 6, :line 39, :file "/Users/kovasb/repo/gamma/src/gamma/emit/tag.cljs"}, :file "src/gamma/emit/tag.cljs", :line 39, :column 1, :end-line 39, :end-column 21, :test true, :name gamma.emit.tag/qualifier-order}}, :require-macros nil, :cljs.analyzer/constants {:order [:variable :name :id :shader :span :break :tag :declaration :inputs :outputs :locals :root :invariant :storage :precision :parameter :else :type], :seen #{:variable :else :locals :name :precision :type :break :inputs :root :invariant :id :outputs :storage :declaration :tag :parameter :shader :span}}, :doc nil}